// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjektManager.DataBaseAPI;

#nullable disable

namespace ProjektManager.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20240130152139_Initz")]
    partial class Initz
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Pchecker.Models.Abteilung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AbBezeichung")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AbLeiter")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProjektNr")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ProjektNr");

                    b.ToTable("Abteilungen");
                });

            modelBuilder.Entity("Pchecker.Models.Mitarbeiter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AbteilungId")
                        .HasColumnType("int");

                    b.Property<string>("NachName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ProjektStunden")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AbteilungId");

                    b.ToTable("Mitarbeiter");
                });

            modelBuilder.Entity("Pchecker.Models.Problem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Abteilung")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("AuftritsDatum")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Bewertung")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Bezug")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Initiator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("KW")
                        .HasColumnType("int");

                    b.Property<string>("Kategorie")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Maßnahme")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PID")
                        .HasColumnType("int");

                    b.Property<string>("ProjektNr")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProjketNr")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProzessStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ReTermin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Termin")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Thema")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ProjektNr");

                    b.ToTable("Probleme");
                });

            modelBuilder.Entity("Pchecker.Models.Projekt", b =>
                {
                    b.Property<string>("ProjektNr")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Auftraggeber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DeadLine")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ProjektLeiter")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Stand")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Startpunkt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ProjektNr");

                    b.ToTable("Projekte");
                });

            modelBuilder.Entity("Pchecker.Models.Abteilung", b =>
                {
                    b.HasOne("Pchecker.Models.Projekt", null)
                        .WithMany("Abteilungen")
                        .HasForeignKey("ProjektNr");
                });

            modelBuilder.Entity("Pchecker.Models.Mitarbeiter", b =>
                {
                    b.HasOne("Pchecker.Models.Abteilung", null)
                        .WithMany("MitarbeiterList")
                        .HasForeignKey("AbteilungId");
                });

            modelBuilder.Entity("Pchecker.Models.Problem", b =>
                {
                    b.HasOne("Pchecker.Models.Projekt", null)
                        .WithMany("Probleme")
                        .HasForeignKey("ProjektNr");
                });

            modelBuilder.Entity("Pchecker.Models.Abteilung", b =>
                {
                    b.Navigation("MitarbeiterList");
                });

            modelBuilder.Entity("Pchecker.Models.Projekt", b =>
                {
                    b.Navigation("Abteilungen");

                    b.Navigation("Probleme");
                });
#pragma warning restore 612, 618
        }
    }
}
